spring:
  application:
    name: "notification-service"
  cloud:   # billing & payment  ile async iletişim
    stream:
      defaultBinder: kafka
      function:
        definition: billingPaymentFunction
      bindings:
        billingPaymentFunction-in-0:
          destination: billing-payment-topic
          content-type: application/json
          group: notification-group
      kafka:
        binder: 
          brokers: localhost:9092
  datasource:
    url: "jdbc:postgresql://localhost:5434/notification-service" #TODO: Hangi DB'de calisacak belirlemedik şimdilik böyle bırakıyorum
    username: postgres                                            # docker-compose.yml dosyasında 5434 portunda postgre yazmıştım
    password: test                                                # eğer burada başka db kullanırsak oradaki postgreyi de boşta bırakmayalım
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    showSql: true
    hibernate:
      ddlAuto: update
server:
  port: 8088

eureka:
  client:
    service-url:
      defaultZone: "http://localhost:8888/eureka/"
    register-with-eureka: true
    fetch-registry: true